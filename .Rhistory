sep=";",na.strings = "?")
subset$Date <- as.Date(subset$Date , "%d/%m/%Y")
subset$Time <- paste(subset$Date, subset$Time, sep=" ")
subset$Time <- strptime(subset$Time, "%Y-%m-%d %H:%M:%S")
subset <- filter(corpus, corpus$Date == as.Date("1/2/2007") | corpus$Date == "2/2/2007")
corpus <- read.table("./data/household_power_consumption.txt", header=TRUE,
sep=";", colClasses = c("character", "character", rep("numeric",7)),na.strings = "?")
subset <- filter(corpus, corpus$Date == as.Date("1/2/2007") | corpus$Date == as.Date("2/2/2007"))
png(filename = "plot1.png",
width = 480, height = 480)
hist(subset$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
breaks=12, ylim = c(0, 1200))
dev.off()
subset$Date <- as.Date(subset$Date , "%d/%m/%Y")
subset$Time <- paste(subset$Date, subset$Time, sep=" ")
subset$Time <- strptime(subset$Time, "%Y-%m-%d %H:%M:%S")
png(filename = "plot1.png",
width = 480, height = 480)
hist(subset$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
breaks=12, ylim = c(0, 1200))
dev.off()
corpus <- read.table("./data/household_power_consumption.txt", header=TRUE,
sep=";",na.strings = "?")
subset <- filter(corpus, corpus$Date == "1/2/2007" Date == "2/2/2007"))
subset <- filter(corpus, corpus$Date == "1/2/2007" | corpus$Date == "2/2/2007"))
subset <- filter(corpus, corpus$Date == "1/2/2007" | corpus$Date == "2/2/2007")
png(filename = "plot1.png",
width = 480, height = 480)
hist(subset$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
breaks=12, ylim = c(0, 1200))
dev.off()
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot2.R')
source('~/Documents/app/ExData_Plotting1/plot2.R')
png(filename = "plot2.png",
width = 480, height = 480,
units = "px", bg = "transparent")
plot(subset$Time, subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "l")
dev.off()
png(filename = "plot2.png",
width = 480, height = 480,
units = "px", bg = "transparent")
plot(subset$Time, subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "l")
dev.off()
png(filename = "plot1.png",
width = 480, height = 480)
hist(subset$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
breaks=12, ylim = c(0, 1200))
dev.off()
subset$Date <- as.Date(subset$Date , "%d/%m/%Y")
png(filename = "plot2.png",
width = 480, height = 480,
units = "px", bg = "transparent")
plot(subset$Time, subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "l")
dev.off()
png(filename = "plot2.png",
width = 480, height = 480,
units = "px", bg = "transparent")
plot(subset$Date, subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "l")
dev.off()
subset <- filter(corpus, corpus$Date == "1/2/2007" | corpus$Date == "2/2/2007")
subset$DateTime <- strptime(paste(subset$Date, subset$Time), "%d/%m/%Y %H:%M:%S")
png(filename = "plot2.png",
width = 480, height = 480,
units = "px", bg = "transparent")
plot(subset$DateTime, subset$Global_active_power, xlab = "", ylab = "Global Active Power (kilowatts)", type = "l")
dev.off()
source('~/Documents/app/ExData_Plotting1/plot3.R')
png(filename = "plot3.png",
width = 480, height = 480,
units = "px", bg = "transparent")
plot(subset$DateTime, Sub_metering_1,
col = "black")
lines(subset$DateTime, Sub_metering_2, col = "red")
lines(subset$DateTime, Sub_metering_3, col = "blue")
legend("topright",
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lwd = 1)
dev.off()
png(filename = "plot3.png",
width = 480, height = 480,
units = "px", bg = "transparent")
lines(subset$DateTime, Sub_metering_1, col = "black")
lines(subset$DateTime, Sub_metering_2, col = "red")
lines(subset$DateTime, Sub_metering_3, col = "blue")
legend("topright",
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lwd = 1)
dev.off()
png("plot3.png", width = 480, height = 480)
ylimits = range(c(df$Sub_metering_1, df$Sub_metering_2, df$Sub_metering_3))
plot(df$Time, df$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "l", ylim = ylimits, col = "black")
par(new = TRUE)
plot(df$Time, df$Sub_metering_2, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "red")
par(new = TRUE)
plot(df$Time, df$Sub_metering_3, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "blue")
legend("topright",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
#bg = "transparent",
#bty = "n",
lty = c(1,1,1),
col = c("black", "red", "blue")
)
dev.off
png(filename = "plot3.png",
width = 480, height = 480,
units = "px", bg = "transparent")
lines(subset$DateTime, Sub_metering_1, col = "black")
lines(subset$DateTime, Sub_metering_2, col = "red")
lines(subset$DateTime, Sub_metering_3, col = "blue")
legend("topright",
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lwd = 1)
dev.off()
png(filename = "plot3.png",
width = 480, height = 480)
lines(subset$DateTime, Sub_metering_1, col = "black")
lines(subset$DateTime, Sub_metering_2, col = "red")
lines(subset$DateTime, Sub_metering_3, col = "blue")
legend("topright",
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lwd = 1)
dev.off()
png(filename = "plot3.png",
width = 480, height = 480)
lines(subset$DateTime, Sub_metering_1, col = "black")
lines(subset$DateTime, Sub_metering_2, col = "red")
lines(subset$DateTime, Sub_metering_3, col = "blue")
legend("topright",
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lwd = 1)
dev.off()
head(subset)
source('~/Documents/app/ExData_Plotting1/plot3.R')
png(filename = "plot3.png",
width = 480, height = 480)
lines(subset$DateTime, Sub_metering_1, col = "black")
lines(subset$DateTime, Sub_metering_2, col = "red")
lines(subset$DateTime, Sub_metering_3, col = "blue")
legend("topright",
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lwd = 1)
dev.off()
png(filename = "plot3.png",
width = 480, height = 480)
lines(subset$DateTime, Sub_metering_1, col = "black")
png("plot3.png", width = 480, height = 480)
ylimits = range(c(subset$Sub_metering_1, subset$Sub_metering_2, subset$Sub_metering_3))
plot(subset$Time, subset$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "l", ylim = ylimits, col = "black")
par(new = TRUE)
plot(subset$Time, subset$Sub_metering_2, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "red")
par(new = TRUE)
plot(subset$Time, subset$Sub_metering_3, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "blue")
legend("topright",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
#bg = "transparent",
#bty = "n",
lty = c(1,1,1),
col = c("black", "red", "blue")
)
dev.off
png("plot3.png", width = 480, height = 480)
ylimits = range(c(subset$Sub_metering_1, subset$Sub_metering_2, subset$Sub_metering_3))
plot(subset$DateTime, subset$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "l", ylim = ylimits, col = "black")
par(new = TRUE)
plot(subset$DateTime, subset$Sub_metering_2, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "red")
par(new = TRUE)
plot(subset$DateTime, subset$Sub_metering_3, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "blue")
legend("topright",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
#bg = "transparent",
#bty = "n",
lty = c(1,1,1),
col = c("black", "red", "blue")
)
dev.off
png("plot3.png", width = 480, height = 480)
ylimits = range(c(subset$Sub_metering_1, subset$Sub_metering_2, subset$Sub_metering_3))
ylimits
plot(df$Time, df$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "l", ylim = ylimits, col = "black")
plot(subset$DateTime, subset$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "l", ylim = ylimits, col = "black")
plot(subset$DateTime, subset$Sub_metering_2, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "red")
plot(subset$DateTime, subset$Sub_metering_3, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "blue")
legend("topright",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
#bg = "transparent",
#bty = "n",
lty = c(1,1,1),
col = c("black", "red", "blue")
)
dev.off
png("plot3.png", width = 480, height = 480)
ylimits = range(c(subset$Sub_metering_1, subset$Sub_metering_2, subset$Sub_metering_3))
plot(subset$DateTime, subset$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "l", ylim = ylimits, col = "black")
par(new = TRUE)
plot(subset$DateTime, subset$Sub_metering_2, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "red")
par(new = TRUE)
plot(subset$DateTime, subset$Sub_metering_3, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "blue")
dev.off
dev.off()
png("plot3.png", width = 480, height = 480)
ylimits = range(c(subset$Sub_metering_1, subset$Sub_metering_2, subset$Sub_metering_3))
plot(subset$DateTime, subset$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "l", ylim = ylimits, col = "black")
par(new = TRUE)
plot(subset$DateTime, subset$Sub_metering_2, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "red")
par(new = TRUE)
plot(subset$DateTime, subset$Sub_metering_3, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "blue")
legend("topright",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
#bg = "transparent",
#bty = "n",
lty = c(1,1,1),
col = c("black", "red", "blue")
)
dev.off()
png(filename = "plot3.png",
width = 480, height = 480,
units = "px", bg = "transparent")
plot(subset$DateTime, Sub_metering_1,
type = "l",
col = "black",
xlab = "", ylab = "Energy sub metering")
lines(subset$DateTime, Sub_metering_2, col = "red")
lines(subset$DateTime, Sub_metering_3, col = "blue")
legend("topright",
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lwd = 1)
dev.off()
png(filename = "plot3.png",
width = 480, height = 480)
lines(subset$DateTime, Sub_metering_1, col = "black")
lines(subset$DateTime, Sub_metering_2, col = "red")
lines(subset$DateTime, Sub_metering_3, col = "blue")
legend("topright",
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lwd = 1)
dev.off()
png(filename = "plot3.png",
width = 480, height = 480)
lines(subset$Date, Sub_metering_1, col = "black")
lines(subset$Date, Sub_metering_2, col = "red")
lines(subset$Date, Sub_metering_3, col = "blue")
legend("topright",
col = c("black", "red", "blue"),
c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lwd = 1)
dev.off()
png("plot3.png", width = 480, height = 480)
ylimits = range(c(subset$Sub_metering_1, subset$Sub_metering_2, subset$Sub_metering_3))
plot(subset$Date, subset$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "l", ylim = ylimits, col = "black")
par(new = TRUE)
plot(subset$Date, subset$Sub_metering_2, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "red")
par(new = TRUE)
plot(subset$Date, subset$Sub_metering_3, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "blue")
legend("topright",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1,1),
col = c("black", "red", "blue")
)
dev.off()
png("plot3.png", width = 480, height = 480)
ylimits = range(c(subset$Sub_metering_1, subset$Sub_metering_2, subset$Sub_metering_3))
plot(subset$DateTime, subset$Sub_metering_1, xlab = "", ylab = "Energy sub metering", type = "l", ylim = ylimits, col = "black")
par(new = TRUE)
plot(subset$DateTime, subset$Sub_metering_2, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "red")
par(new = TRUE)
plot(subset$DateTime, subset$Sub_metering_3, xlab = "", axes = FALSE, ylab = "", type = "l", ylim = ylimits, col = "blue")
legend("topright",
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"),
lty = c(1,1,1),
col = c("black", "red", "blue")
)
dev.off()
png(filename = "plot3.png",
width = 480, height = 480)
plot(subset$DateTime, subset$Sub_metering_1, type = "n", ylab = "Energy sub metering", col = "black")
plot(subset$DateTime, subset$Sub_metering_2, col = "red")
plot(subset$DateTime, subset$Sub_metering_3, col = "blue")
legend("topright", pch =1, col = c("black", "red", "blue"), legend = c(Sub_metering_1, Sub_metering_2, Sub_metering_3))
png(filename = "plot3.png",
width = 480, height = 480)
plot(subset$DateTime, subset$Sub_metering_1, type = "n", ylab = "Energy sub metering", col = "black")
plot(subset$DateTime, subset$Sub_metering_2, col = "red")
plot(subset$DateTime, subset$Sub_metering_3, col = "blue")
legend("topright", pch =1, col = c("black", "red", "blue"), legend = c(Sub_metering_1, Sub_metering_2, Sub_metering_3))
dev.off()
png("plot3.png",480,480)
plot(1:nrow(subset),subset$Sub_metering_1,xlab="",ylab= "Energy sub metering",xaxt="n",type= "l",col="black")
par(new=TRUE)
plot(1:nrow(subset),subset$Sub_metering_2,xlab="",ylab= "",xaxt="n",yaxt="n",ylim=c(min(subset$Sub_metering_1),max(subset$Sub_metering_1)),type= "l",col="red")
par(new=TRUE)
plot(1:nrow(subset),subset$Sub_metering_3,xlab="",ylab= "",xaxt="n",yaxt="n",ylim=c(min(subset$Sub_metering_1),max(subset$Sub_metering_1)),type= "l",col="blue")
axis(1,at=c(1,1441,2880),labels=c("Thu","Fri","Sat"))
legend("topright",col=c("black","red","blue"),lty=1,legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
png("plot3.png",480,480)
plot(1:nrow(subset),subset$Sub_metering_1,xlab="",ylab= "Energy sub metering",xaxt="n",type= "l",col="black")
par(new=TRUE)
plot(1:nrow(subset),subset$Sub_metering_2,xlab="",ylab= "",xaxt="n",yaxt="n",ylim=c(min(subset$Sub_metering_1),max(subset$Sub_metering_1)),type= "l",col="red")
par(new=TRUE)
plot(1:nrow(subset),subset$Sub_metering_3,xlab="",ylab= "",xaxt="n",yaxt="n",ylim=c(min(subset$Sub_metering_1),max(subset$Sub_metering_1)),type= "l",col="blue")
#axis(1,at=c(1,1441,2880),labels=c("Thu","Fri","Sat"))
legend("topright",col=c("black","red","blue"),lty=1,legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
png("plot3.png",480,480)
plot(1:nrow(subset),subset$Sub_metering_1,xlab="",ylab= "Energy sub metering",xaxt="n",type= "l",col="black")
par(new=TRUE)
plot(1:nrow(subset),subset$Sub_metering_2,xlab="",ylab= "",xaxt="n",yaxt="n",ylim=c(min(subset$Sub_metering_1),max(subset$Sub_metering_1)),type= "l",col="red")
par(new=TRUE)
plot(1:nrow(subset),subset$Sub_metering_3,xlab="",ylab= "",xaxt="n",yaxt="n",ylim=c(min(subset$Sub_metering_1),max(subset$Sub_metering_1)),type= "l",col="blue")
axis(1,labels=c("Thu","Fri","Sat"))
legend("topright",col=c("black","red","blue"),lty=1,legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
size(subset)
dim(subset)
nrow0 <- function(x) dim(x)[1]
nrow0
dim(subset)[1]
dim(subset)[1] / 2
png("plot3.png",480,480)
plot(1:nrow(subset),subset$Sub_metering_1,xlab="",ylab= "Energy sub metering",xaxt="n",type= "l",col="black")
par(new=TRUE)
plot(1:nrow(subset),subset$Sub_metering_2,xlab="",ylab= "",xaxt="n",yaxt="n",ylim=c(min(subset$Sub_metering_1),max(subset$Sub_metering_1)),type= "l",col="red")
par(new=TRUE)
plot(1:nrow(subset),subset$Sub_metering_3,xlab="",ylab= "",xaxt="n",yaxt="n",ylim=c(min(subset$Sub_metering_1),max(subset$Sub_metering_1)),type= "l",col="blue")
xlim = dim(subset)[1]
xcenter = xlim/2 + 1
axis(1,at=c(1,xcenter,xlim),labels=c("Thu","Fri","Sat"))
legend("topright",col=c("black","red","blue"),lty=1,legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
dev.off()
source('~/Documents/app/ExData_Plotting1/plot4.R')
png("plot4.png", width = 480, height = 480)
par(mfrow = c(2, 2))
with(subset, {
plot(subset$DateTime, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(subset$DateTime, Voltage, xlab = "datetime", type = "l", ylab = "Voltage")
plot(1:nrow(subset),subset$Sub_metering_1,xlab="",ylab= "Energy sub metering",xaxt="n",type= "l",col="black")
par(new=TRUE)
plot(1:nrow(subset),subset$Sub_metering_2,xlab="",ylab= "",xaxt="n",yaxt="n",ylim=c(min(subset$Sub_metering_1),max(subset$Sub_metering_1)),type= "l",col="red")
par(new=TRUE)
plot(1:nrow(subset),subset$Sub_metering_3,xlab="",ylab= "",xaxt="n",yaxt="n",ylim=c(min(subset$Sub_metering_1),max(subset$Sub_metering_1)),type= "l",col="blue")
xlim = dim(subset)[1]
xcenter = xlim/2 + 1
axis(1,at=c(1,xcenter,xlim),labels=c("Thu","Fri","Sat"))
legend("topright",col=c("black","red","blue"),lty=1,legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(Time, Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
})
dev.off()
png("plot4.png", width = 480, height = 480)
par(mfrow = c(2, 2))
with(subset, {
plot(subset$DateTime, Global_active_power, type = "l", xlab = "", ylab = "Global Active Power")
plot(subset$DateTime, Voltage, xlab = "datetime", type = "l", ylab = "Voltage")
plot(1:nrow(subset),subset$Sub_metering_1,xlab="",ylab= "Energy sub metering",xaxt="n",type= "l",col="black")
par(new=TRUE)
plot(1:nrow(subset),subset$Sub_metering_2,xlab="",ylab= "",xaxt="n",yaxt="n",ylim=c(min(subset$Sub_metering_1),max(subset$Sub_metering_1)),type= "l",col="red")
par(new=TRUE)
plot(1:nrow(subset),subset$Sub_metering_3,xlab="",ylab= "",xaxt="n",yaxt="n",ylim=c(min(subset$Sub_metering_1),max(subset$Sub_metering_1)),type= "l",col="blue")
xlim = dim(subset)[1]
xcenter = xlim/2 + 1
axis(1,at=c(1,xcenter,xlim),labels=c("Thu","Fri","Sat"))
legend("topright",col=c("black","red","blue"),lty=1,legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"))
plot(subset$DateTime, Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
})
dev.off()
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot1.R')
unzip("./data/exdata-data-household_power_consumption.zip", exdir="./data/")
unzip("./data/exdata-data-household_power_consumption.zip", exdir="./data/")
corpus <- read.table("./data/household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?")
subset <- filter(corpus, corpus$Date == "1/2/2007" | corpus$Date == "2/2/2007")
png(filename = "plot1.png",
width = 480, height = 480)
hist(subset$Global_active_power,
col = "red",
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
breaks=12, ylim = c(0, 1200))
dev.off()
source('~/Documents/app/ExData_Plotting1/plot1.R')
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", destfile="./data/exdata-data-household_power_consumption.zip",mode="wb")
fileUrl="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./data/exdata-data-household_power_consumption.zip",mode="wb")
fileUrl="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./data/exdata-data-household_power_consumption.zip",method="wget")
fileUrl="https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile="./data/exdata-data-household_power_consumption.zip",method="curl")
if (file.exists("./data/exdata-data-household_power_consumption.zip")) "hello" else "Kelo"
if (!file.exists("./data/exdata-data-household_power_consumption.zip")) "hello" else "Kelo"
source('~/Documents/app/ExData_Plotting1/plot1.R')
source('~/Documents/app/ExData_Plotting1/plot2.R')
source('~/Documents/app/ExData_Plotting1/plot3.R')
source('~/Documents/app/ExData_Plotting1/plot4.R')
setwd("/Users/kaniska_mac/Documents/app/RepData_PeerAssessment1")
## What is mean total number of steps taken per day?
# Reproducible Research: Peer Assessment 1
## Loading and preprocessing the data
```{r loaddata}
unzip(zipfile="activity.zip")
data <- read.csv("activity.csv")
```
## What is mean total number of steps taken per day?
```{r}
library(ggplot2)
total.steps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps, na.rm=TRUE)
median(total.steps, na.rm=TRUE)
```
## What is the average daily activity pattern?
```{r}
library(ggplot2)
averages <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
ggplot(data=averages, aes(x=interval, y=steps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
```
On average across all the days in the dataset, the 5-minute interval contains
the maximum number of steps?
```{r}
averages[which.max(averages$steps),]
```
## Imputing missing values
There are many days/intervals where there are missing values (coded as `NA`). The presence of missing days may introduce bias into some calculations or summaries of the data.
```{r how_many_missing}
missing <- is.na(data$steps)
# How many missing
table(missing)
```
All of the missing values are filled in with mean value for that 5-minute
interval.
```{r}
# Replace each missing value with the mean value of its 5-minute interval
fill.value <- function(steps, interval) {
filled <- NA
if (!is.na(steps))
filled <- c(steps)
else
filled <- (averages[averages$interval==interval, "steps"])
return(filled)
}
filled.data <- data
filled.data$steps <- mapply(fill.value, filled.data$steps, filled.data$interval)
```
Now, using the filled data set, let's make a histogram of the total number of steps taken each day and calculate the mean and median total number of steps.
```{r}
total.steps <- tapply(filled.data$steps, filled.data$date, FUN=sum)
qplot(total.steps, binwidth=1000, xlab="total number of steps taken each day")
mean(total.steps)
median(total.steps)
```
Mean and median values are higher after imputing missing data. The reason is
that in the original data, there are some days with `steps` values `NA` for
any `interval`. The total number of steps taken in such days are set to 0s by
default. However, after replacing missing `steps` values with the mean `steps`
of associated `interval` value, these 0 values are removed from the histogram
of total number of steps taken each day.
## Are there differences in activity patterns between weekdays and weekends?
First, let's find the day of the week for each measurement in the dataset. In
this part, we use the dataset with the filled-in values.
```{r}
weekday.or.weekend <- function(date) {
day <- weekdays(date)
if (day %in% c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday"))
return("weekday")
else if (day %in% c("Saturday", "Sunday"))
return("weekend")
else
stop("invalid date")
}
filled.data$date <- as.Date(filled.data$date)
filled.data$day <- sapply(filled.data$date, FUN=weekday.or.weekend)
```
Now, let's make a panel plot containing plots of average number of steps taken
on weekdays and weekends.
```{r}
averages <- aggregate(steps ~ interval + day, data=filled.data, mean)
ggplot(averages, aes(interval, steps)) + geom_line() + facet_grid(day ~ .) +
xlab("5-minute interval") + ylab("Number of steps")
```
